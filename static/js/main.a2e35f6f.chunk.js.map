{"version":3,"sources":["Algorithms/BubbleSort.js","Algorithms/Test.js","Algorithms/QuickSort.js","Algorithms/RadixSort.js","context/Algorithm.context.js","Components/Navbar/Navbar.jsx","Components/Visualizer/Helpers.js","Components/CodeView/CodeView.jsx","Algorithms/Codes.js","Components/CodeView/CodeViewPy.jsx","Components/Visualizer/Visualizer.jsx","App.js","index.js"],"names":["getBubbleSortAnimation","array","animations","passedArr","slice","i","length","noSwaps","j","push","temp","getMergeSortAnimations","arr","mergeSort","leftIdx","rightIdx","midIdx","Math","floor","start","mid","end","start2","value","index","merge","pivot","animation","swap","idx1","idx2","swapIdx","getQuickSortAnimation","left","right","pivotIndex","getDigit","num","abs","pow","getRadixSortAnimations","nums","maxDigitCount","maxDigits","max","log10","mostDigits","k","digitBuckets","Array","from","concat","AlgorithmContext","createContext","AlgorithmProvider","props","useState","algorithm","setAlgorithm","Provider","updateAlgorithm","newAlgorithm","children","Navbar","ANIMATION_SPEED","SPEED","setArray","resetArray","bubbleSort","quickSort","radixSort","speed","useContext","className","onChange","e","target","href","CodeView","language","style","docco","numberToWord","parsed","toString","split","result","join","colorChange","one","two","classNameA","classNameB","childA","document","querySelector","childB","classList","add","setTimeout","remove","background","placeCorrect","swapAinmation","finalChildAStyle","x","y","finalChildBStyle","getBoundingClientRect","top","transform","removeAttribute","height","textContent","randomIntFromInterval","min","random","moveElementTo","idx","querySelectorAll","heightA","heightB","textA","textB","mergeColorChange","arr1","arr2","child","randomColor","completedColor","color","bars","groupChangeColor","bar","myLoop","a","sort","digitBucket","Visualizer","size","setSize","passedValue","setValue","Number","UseInputState","setSpeed","isDisabled","newArray","useEffect","type","onClick","alert","map","cls","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a2e35f6f.chunk.js","sourcesContent":["// export function getBubbleSortAnimation(array){\r\n//     let animations = [];\r\n//     let passedArr = array.slice();\r\n//     for(let i=passedArr.length; i>0; i--){\r\n//         var noSwaps = true;\r\n//         for(let j=0; j<(i-1); j++){\r\n//             if(passedArr[j] > passedArr[j+1]) {\r\n//                 animations.push([passedArr[j],passedArr[j+1]]);\r\n//                 let temp   = passedArr[j+1];\r\n//                 passedArr[j+1] = passedArr[j];\r\n//                 passedArr[j]   = temp;\r\n//                 noSwaps = false;\r\n//             }\r\n//         }\r\n//         if(noSwaps) break;\r\n//     }\r\n//     return animations;\r\n// }\r\n\r\nexport function getBubbleSortAnimation(array){\r\n    let animations = [];\r\n    let passedArr = array.slice();\r\n    for(let i=passedArr.length; i>0; i--){\r\n        var noSwaps = true;\r\n        let j;\r\n        for(j=0; j<(i-1); j++){\r\n            animations.push([passedArr[j],passedArr[j+1]]);\r\n            if(passedArr[j] > passedArr[j+1]) {\r\n                noSwaps = false;\r\n                let temp   = passedArr[j+1];\r\n                passedArr[j+1] = passedArr[j];\r\n                passedArr[j]   = temp;\r\n            }\r\n        }\r\n        if(noSwaps){\r\n            animations.push([\"sorted\"])\r\n            break;\r\n        }\r\n        animations.push([passedArr[j]]);\r\n    }\r\n    return animations;\r\n}\r\n","let animations = [];\r\nexport function getMergeSortAnimations(arr){\r\n    animations = [];\r\n    mergeSort(arr, 0, arr.length - 1);\r\n    animations.push([\"completed\"]);\r\n    return animations;\r\n}\r\nfunction mergeSort(arr, leftIdx, rightIdx){\r\n    if(leftIdx < rightIdx){\r\n        let midIdx = Math.floor((leftIdx+rightIdx) / 2);\r\n\r\n        mergeSort(arr, leftIdx, midIdx);\r\n        mergeSort(arr, midIdx+1, rightIdx);\r\n\r\n        merge(arr, leftIdx, midIdx, rightIdx);\r\n\r\n    }\r\n}\r\n\r\nfunction merge(arr, start, mid, end){\r\n    let start2 = mid + 1;\r\n    // console.log(`Merging left : ${arr.slice(start, mid+1)} right : ${arr.slice(start2,end+1)}`);\r\n    animations.push([\"merge\", arr.slice(start, mid+1), arr.slice(start2, end+1)]);\r\n\r\n    if(arr[mid] <= arr[start2]) {\r\n        return;\r\n    }\r\n\r\n    while(start <= mid && start2 <= end){\r\n        if(arr[start] <= arr[start2] ) {\r\n            animations.push([\"compare\", arr[start], arr[start2]]);\r\n            start++;\r\n        }else {\r\n            let value = arr[start2];\r\n            let index = start2;\r\n\r\n            // Shift all the elements between element 1\r\n            // element 2, right by 1.\r\n            while (index !== start) {\r\n                // console.log(`Moving ${index-1} to ${index}`)\r\n                animations.push([index, arr[index-1]]);\r\n                arr[index] = arr[index - 1];\r\n                index--;\r\n            }\r\n            arr[start] = value;\r\n\r\n            // Update all the pointers\r\n            start++;\r\n            mid++;\r\n            start2++;\r\n        }\r\n    }\r\n}","\r\nfunction pivot(arr, start = 0, end = arr.length - 1, animation) {\r\n  const swap = (arr, idx1, idx2) => {\r\n    [arr[idx1], arr[idx2]] = [arr[idx2], arr[idx1]];\r\n  };\r\n\r\n  // We are assuming the pivot is always the first element\r\n  let pivot = arr[start];\r\n  let swapIdx = start;\r\n\r\n  for (let i = start + 1; i <= end; i++) {\r\n    animation.push([\"compare\", pivot, arr[i]]);  \r\n    if (pivot > arr[i]) {\r\n      swapIdx++;\r\n      swap(arr, swapIdx, i);\r\n      animation.push([arr[swapIdx], arr[i]]);\r\n    }\r\n  }\r\n\r\n  // Swap the pivot from the start the swapPoint\r\n  animation.push([arr[start], arr[swapIdx]]);\r\n  swap(arr, start, swapIdx);\r\n  animation.push([\"placed\", arr[swapIdx]]);\r\n  return swapIdx;\r\n}\r\n\r\n\r\nexport function getQuickSortAnimation(arr, left = 0, right = arr.length -1, animation=[]){\r\n    if(left < right){\r\n        let pivotIndex = pivot(arr, left, right, animation) //3\r\n        //left\r\n        getQuickSortAnimation(arr,left,pivotIndex-1, animation);\r\n        //right\r\n        getQuickSortAnimation(arr,pivotIndex+1,right, animation);\r\n      }\r\n     return animation;\r\n} \r\n\r\n\r\n\r\n\r\n\r\n","function getDigit(num, i) {\r\n  return Math.floor(Math.abs(num) / Math.pow(10, i)) % 10;\r\n}\r\n\r\nfunction digitCount(num) {\r\n  if (num === 0) return 1;\r\n  return Math.floor(Math.log10(Math.abs(num))) + 1;\r\n}\r\n\r\nfunction mostDigits(nums) {\r\n  let maxDigits = 0;\r\n  for (let i = 0; i < nums.length; i++) {\r\n    maxDigits = Math.max(maxDigits, digitCount(nums[i]));\r\n  }\r\n  return maxDigits;\r\n}\r\n\r\nexport function getRadixSortAnimations(nums){\r\n    let animations = [];\r\n    let maxDigitCount = mostDigits(nums);\r\n    for(let k = 0; k < maxDigitCount; k++){\r\n        let digitBuckets = Array.from({length: 10}, () => []);\r\n        for(let i = 0; i < nums.length; i++){\r\n            let digit = getDigit(nums[i],k);\r\n            digitBuckets[digit].push(nums[i]);\r\n        }\r\n        animations.push([\"digitBucket\", digitBuckets])\r\n        nums = [].concat(...digitBuckets);\r\n        animations.push([\"nums\", nums])\r\n    }\r\n    return animations;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { createContext, useState} from 'react';\r\n\r\nexport const AlgorithmContext = createContext();\r\n\r\nexport function AlgorithmProvider(props){\r\n\r\n    const [algorithm, setAlgorithm] = useState(\"bubble\");\r\n    \r\n    function updateAlgorithm(newAlgorithm){\r\n        setAlgorithm((algorithm) => {\r\n            return newAlgorithm;\r\n        })\r\n    }\r\n\r\n    return(\r\n        <AlgorithmContext.Provider value={{algorithm, updateAlgorithm}}>\r\n            {props.children}\r\n        </AlgorithmContext.Provider>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport \"./Navbar.scss\";\r\nimport { AlgorithmContext } from \"../../context/Algorithm.context\";\r\n\r\nfunction Navbar(props) {\r\n  const {\r\n    setArray,\r\n    resetArray,\r\n    array,\r\n    bubbleSort,\r\n    mergeSort,\r\n    quickSort,\r\n    radixSort,\r\n    speed,\r\n  } = props;\r\n\r\n  const { algorithm, updateAlgorithm } = useContext(AlgorithmContext);\r\n\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className=\"nav__brand\">\r\n        <p>ALGOHUB</p>\r\n      </div>\r\n      <div className=\"nav__algo\">\r\n        <select\r\n          value={algorithm}\r\n          onChange={(e) => updateAlgorithm(e.target.value)}\r\n          className=\"nav__select\"\r\n        >\r\n          <option value=\"bubble\">Bubble Sort</option>\r\n          <option value=\"merge\">Merge Sort</option>\r\n          <option value=\"quick\">Quick Sort</option>\r\n          <option value=\"radix\">Radix Sort</option>\r\n        </select>\r\n\r\n        <a\r\n          className=\"quiz\"\r\n          href=\"https://docs.google.com/forms/d/e/1FAIpQLSfcyVmlJNaBdu0sf5S9TAuJ1qu9ai1sHZ5I7naYO53r4azMmw/viewform?usp=sf_link\"\r\n        >\r\n          Quiz\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import {getQuickSortAnimation} from '../../Algorithms/QuickSort';\r\n\r\nimport { useState } from 'react';\r\n\r\nexport let ANIMATION_SPEED;\r\n\r\nlet SPEED;\r\n\r\nexport const UseInputState = (passedValue) => {\r\n    const [value, setValue] = useState(passedValue);\r\n    const handleChange = e => {\r\n      let value = Number(e.target.value);\r\n        setValue(value);\r\n        ANIMATION_SPEED = value;\r\n        SPEED = ANIMATION_SPEED-200;\r\n    };\r\n    return [value, handleChange];\r\n};\r\n\r\n\r\n\r\nexport function numberToWord(num){\r\n    let parsed = num.toString().split('');\r\n    let result = [];\r\n    for(let i=0; i<parsed.length; i++){\r\n        if(parsed[i] === \"0\") result.push(\"zero\")\r\n        else if(parsed[i] === \"1\") result.push(\"one\")\r\n        else if(parsed[i] === \"2\") result.push(\"two\")\r\n        else if(parsed[i] === \"3\") result.push(\"three\")\r\n        else if(parsed[i] === \"4\") result.push(\"four\")\r\n        else if(parsed[i] === \"5\") result.push(\"five\")\r\n        else if(parsed[i] === \"6\") result.push(\"six\")\r\n        else if(parsed[i] === \"7\") result.push(\"seven\")\r\n        else if(parsed[i] === \"8\") result.push(\"eight\")\r\n        else if(parsed[i] === \"9\") result.push(\"nine\")\r\n    }\r\n    return result.join('');\r\n}\r\n\r\nexport function colorChange(one, two){\r\n  let classNameA = numberToWord(one);\r\n  let classNameB = numberToWord(two);\r\n  const childA = document.querySelector(`.${classNameA}`);\r\n  const childB = document.querySelector(`.${classNameB}`);\r\n\r\n  childA.classList.add('compare');\r\n  childB.classList.add('compare');\r\n\r\n  setTimeout(() => {\r\n    childA.classList.remove('compare');\r\n    childB.classList.remove('compare');\r\n    childA.style.background = 'turquoise';\r\n    childB.style.background = 'turquoise';\r\n  }, SPEED);\r\n}\r\n\r\nexport function colorChangeSingle(one){\r\n  let classNameA = numberToWord(one);\r\n  const childA = document.querySelector(`.${classNameA}`);\r\n\r\n  childA.classList.add('compare');\r\n\r\n  setTimeout(() => {\r\n    childA.classList.remove('compare');\r\n  }, SPEED);\r\n}\r\n\r\nexport function placeCorrect(one){\r\n  let className = numberToWord(one);\r\n  const child = document.querySelector(`.${className}`);\r\n\r\n  child.classList.add(\"placed\");\r\n}\r\n\r\nexport function swapAinmation(one, two){\r\n    let classNameA = numberToWord(one);\r\n    let classNameB = numberToWord(two);\r\n    const childA = document.querySelector(`.${classNameA}`);\r\n    const childB = document.querySelector(`.${classNameB}`);\r\n    const finalChildAStyle = {\r\n        x: null,\r\n        y: null,\r\n    };\r\n    const finalChildBStyle = {\r\n        x: null,\r\n        y: null,\r\n    };\r\n    \r\n    childA.classList.add('transition');\r\n    childB.classList.add('transition');\r\n    finalChildAStyle.x = childB.getBoundingClientRect().left - childA.getBoundingClientRect().left;\r\n    finalChildAStyle.y = childA.getBoundingClientRect().top - childB.getBoundingClientRect().top;\r\n    finalChildBStyle.x = childA.getBoundingClientRect().left - childB.getBoundingClientRect().left;\r\n    finalChildBStyle.y = childB.getBoundingClientRect().top - childA.getBoundingClientRect().top;\r\n    childA.style.transform = `translate(${finalChildAStyle.x}px, ${finalChildAStyle.y}px)`;\r\n    childB.style.transform = `translate(${finalChildBStyle.x}px, ${finalChildBStyle.y}px)`;\r\n\r\n    setTimeout(() => {\r\n    //   document.querySelector('.container').insertBefore(childB, childA);\r\n      childA.classList.remove('transition');\r\n      childB.classList.remove('transition');\r\n\r\n      childA.classList.remove(classNameA);\r\n      childB.classList.remove(classNameB);\r\n\r\n      childA.removeAttribute('style');\r\n      childB.removeAttribute('style');\r\n      \r\n      childA.style.height = `${two}px`;\r\n      childB.style.height = `${one}px`;\r\n\r\n      childA.classList.add(classNameB);\r\n      childB.classList.add(classNameA)\r\n\r\n      childA.style.background = 'turquoise';\r\n      childB.style.background = 'turquoise';\r\n\r\n      childA.textContent = two;\r\n      childB.textContent = one;\r\n    }, SPEED);\r\n}\r\n\r\nexport function testSortingAlgorithms() {\r\n    for (let i = 0; i < 100; i++) {\r\n      const array = [];\r\n      const length = randomIntFromInterval(1, 1000);\r\n      for (let i = 0; i < length; i++) {\r\n        array.push(randomIntFromInterval(-1000, 1000));\r\n      }\r\n      const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n      const quickSortedArray = getQuickSortAnimation(array.slice());\r\n      console.log(arraysAreEqual(javaScriptSortedArray, quickSortedArray));\r\n    }\r\n}\r\n\r\nexport function arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nexport function randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function moveElementTo(idx, value){\r\n  let classNameB = numberToWord(value);\r\n  const childA = document.querySelectorAll(\".array-bars\")[idx];\r\n  const childB = document.querySelector(`.${classNameB}`);\r\n  let heightA = childA.style.height;\r\n  let heightB = childB.style.height;\r\n  let classNameA = childA.classList.value.split(' ')[1];\r\n  let textA = childA.textContent;\r\n  let textB = childB.textContent;\r\n\r\n\r\n  const finalChildAStyle = {\r\n      x: null,\r\n      y: null,\r\n  };\r\n  const finalChildBStyle = {\r\n      x: null,\r\n      y: null,\r\n  };\r\n    childA.classList.add('transition');\r\n    childB.classList.add('transition');\r\n  finalChildAStyle.x = childB.getBoundingClientRect().left - childA.getBoundingClientRect().left;\r\n  finalChildAStyle.y = childA.getBoundingClientRect().top - childB.getBoundingClientRect().top;\r\n  finalChildBStyle.x = childA.getBoundingClientRect().left - childB.getBoundingClientRect().left;\r\n  finalChildBStyle.y = childB.getBoundingClientRect().top - childA.getBoundingClientRect().top;\r\n  childA.style.transform = `translate(${finalChildAStyle.x}px, ${finalChildAStyle.y}px)`;\r\n  childB.style.transform = `translate(${finalChildBStyle.x}px, ${finalChildBStyle.y}px)`;\r\n\r\n  setTimeout(() => {\r\n  //   document.querySelector('.container').insertBefore(childB, childA);\r\n    childA.classList.remove('transition');\r\n    childB.classList.remove('transition');\r\n\r\n    childA.classList.remove(classNameA);\r\n    childB.classList.remove(classNameB);\r\n\r\n    childA.removeAttribute('style');\r\n    childB.removeAttribute('style');\r\n    \r\n    childA.style.height = heightB;\r\n    childB.style.height = heightA;\r\n\r\n    childA.classList.add(classNameB);\r\n    childB.classList.add(classNameA)\r\n\r\n    childA.style.background = 'turquoise';\r\n    childB.style.background = 'turquoise';\r\n\r\n    childA.textContent = textB;\r\n    childB.textContent = textA;\r\n  }, SPEED);\r\n}\r\n\r\nexport function mergeColorChange(arr1, arr2){\r\n  for(let i=0; i < arr1.length; i++){\r\n    let className = numberToWord(arr1[i]);\r\n    let child = document.querySelector(`.${className}`);\r\n    child.style.background = '#da00f7';\r\n    setTimeout(function() {\r\n      child.style.background = 'turquoise';\r\n    }, SPEED)\r\n  }\r\n  for(let i=0; i < arr2.length; i++){\r\n    let className = numberToWord(arr2[i]);\r\n    let child = document.querySelector(`.${className}`);\r\n    child.style.background = \"#750485\";\r\n    setTimeout(function() {\r\n      child.style.background = 'turquoise';\r\n    }, SPEED)\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction generateRandomColors(num){\r\n\r\n  var a = [];\r\n\r\n  for(var i=0; i<num; i++){\r\n      a.push(randomColor());\r\n  }\r\n\r\n  return a;\r\n\r\n}\r\n\r\nfunction randomColor(){\r\n\r\n  let r = Math.floor(Math.random() * 256);\r\n\r\n  let g = Math.floor(Math.random() * 256);\r\n\r\n  let b = Math.floor(Math.random() * 256);\r\n\r\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n\r\n}\r\n\r\nexport function changeBarColor(){\r\n  let bars = document.querySelectorAll(\".array-bars\");\r\n  let colors = generateRandomColors(bars.length);\r\n  for(let i=0; i<bars.length; i++){\r\n    bars[i].style.background = colors[i];\r\n  }\r\n}\r\n\r\nexport function completedColor(color){\r\n  let bars = document.querySelectorAll(\".array-bars\");\r\n  for(let i=0; i<bars.length; i++){\r\n    bars[i].style.background = color;\r\n  }\r\n}\r\n\r\nexport function groupChangeColor(arr){\r\n  let bars = [];\r\n  let color = randomColor();\r\n  for(let i=0; i<arr.length; i++){\r\n    let className = numberToWord(arr[i]);\r\n    let bar = document.querySelector(`.${className}`);\r\n    bars.push(bar);\r\n  }\r\n  // console.log(bars);\r\n  for(let i=0; i<bars.length; i++){\r\n    bars[i].style.background = color;\r\n  } \r\n}\r\n","import React, {useContext} from 'react';\r\nimport {JS_BUBBLE, JS_QUICK, JS_MERGE, JS_RADIX} from '../../Algorithms/Codes';\r\nimport {AlgorithmContext} from '../../context/Algorithm.context';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nexport default function CodeView() {\r\n    const {algorithm} = useContext(AlgorithmContext);\r\n\r\n    return (\r\n        <div>\r\n            <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n                {algorithm === \"bubble\" ? JS_BUBBLE : algorithm === \"quick\" ? JS_QUICK : algorithm === \"radix\" ? JS_RADIX : algorithm === \"merge\" ? JS_MERGE : ''}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    )\r\n}\r\n","export const JS_BUBBLE = `\r\nlet bubbleSort = (inputArr) => {\r\n    let len = inputArr.length;\r\n    for (let i = 0; i < len; i++) {\r\n        for (let j = 0; j < len; j++) {\r\n            if (inputArr[j] > inputArr[j + 1]) {\r\n                let tmp = inputArr[j];\r\n                inputArr[j] = inputArr[j + 1];\r\n                inputArr[j + 1] = tmp;\r\n            }\r\n        }\r\n    }\r\n    return inputArr;\r\n};\r\n`;\r\n\r\nexport const JS_MERGE = `\r\n// Merge function\r\nfunction merge(arr1, arr2){\r\n    let results = [];\r\n    let i = 0;\r\n    let j = 0;\r\n    while(i < arr1.length && j < arr2.length){\r\n        if(arr2[j] > arr1[i]){\r\n            results.push(arr1[i]);\r\n            i++;\r\n        } else {\r\n            results.push(arr2[j])\r\n            j++;\r\n        }\r\n    }\r\n    while(i < arr1.length) {\r\n        results.push(arr1[i])\r\n        i++;\r\n    }\r\n    while(j < arr2.length) {\r\n        results.push(arr2[j])\r\n        j++;\r\n    }\r\n    return results;\r\n}\r\n\r\n// Recrusive Merge Sort\r\nfunction mergeSort(arr){\r\n    if(arr.length <= 1) return arr;\r\n    let mid = Math.floor(arr.length/2);\r\n    let left = mergeSort(arr.slice(0,mid));\r\n    let right = mergeSort(arr.slice(mid));\r\n    return merge(left, sright);\r\n}\r\n`;\r\n\r\nexport const JS_QUICK = `\r\nfunction pivot(arr, start = 0, end = arr.length - 1) {\r\n  const swap = (arr, idx1, idx2) => {\r\n    [arr[idx1], arr[idx2]] = [arr[idx2], arr[idx1]];\r\n  };\r\n\r\n  // We are assuming the pivot is always the first element\r\n  let pivot = arr[start];\r\n  let swapIdx = start;\r\n\r\n  for (let i = start + 1; i <= end; i++) {\r\n    if (pivot > arr[i]) {\r\n      swapIdx++;\r\n      swap(arr, swapIdx, i);\r\n    }\r\n  }\r\n\r\n  // Swap the pivot from the start the swapPoint\r\n  swap(arr, start, swapIdx);\r\n  return swapIdx;\r\n}\r\n\r\n\r\nfunction quickSort(arr, left = 0, right = arr.length -1){\r\n    if(left < right){\r\n        let pivotIndex = pivot(arr, left, right)\r\n        //left\r\n        quickSort(arr,left,pivotIndex-1);\r\n        //right\r\n        quickSort(arr,pivotIndex+1,right);\r\n      }\r\n     return arr;\r\n}\r\n`;\r\n\r\nexport const JS_RADIX = `\r\nfunction getDigit(num, i) {\r\n  return Math.floor(Math.abs(num) / Math.pow(10, i)) % 10;\r\n}\r\n\r\nfunction digitCount(num) {\r\n  if (num === 0) return 1;\r\n  return Math.floor(Math.log10(Math.abs(num))) + 1;\r\n}\r\n\r\nfunction mostDigits(nums) {\r\n  let maxDigits = 0;\r\n  for (let i = 0; i < nums.length; i++) {\r\n    maxDigits = Math.max(maxDigits, digitCount(nums[i]));\r\n  }\r\n  return maxDigits;\r\n}\r\n\r\nfunction radixSort(nums){\r\n    let maxDigitCount = mostDigits(nums);\r\n    for(let k = 0; k < maxDigitCount; k++){\r\n        let digitBuckets = Array.from({length: 10}, () => []);\r\n        for(let i = 0; i < nums.length; i++){\r\n            let digit = getDigit(nums[i],k);\r\n            digitBuckets[digit].push(nums[i]);\r\n        }\r\n        nums = [].concat(...digitBuckets);\r\n        console.log(nums);\r\n    }\r\n    return nums;\r\n}\r\n`;\r\n\r\n//PYTHON\r\nexport const PY_BUBBLE = `\r\ndef bubbleSort(arr):\r\n    n = len(arr)\r\n  \r\n    # Traverse through all array elements\r\n    for i in range(n-1):\r\n    # range(n) also work but outer loop \r\n    # will repeat one time more than needed.\r\n  \r\n        # Last i elements are already in place\r\n        for j in range(0, n-i-1):\r\n  \r\n            # traverse the array from 0 to n-i-1\r\n            # Swap if the element found is greater\r\n            # than the next element\r\n            if arr[j] > arr[j+1] :\r\n                arr[j], arr[j+1] = arr[j+1], arr[j]\r\n`;\r\n\r\nexport const PY_MERGE = `\r\ndef mergeSort(arr):\r\n    if len(arr) > 1:\r\n \r\n         # Finding the mid of the array\r\n        mid = len(arr)//2\r\n \r\n        # Dividing the array elements\r\n        L = arr[:mid]\r\n \r\n        # into 2 halves\r\n        R = arr[mid:]\r\n \r\n        # Sorting the first half\r\n        mergeSort(L)\r\n \r\n        # Sorting the second half\r\n        mergeSort(R)\r\n \r\n        i = j = k = 0\r\n \r\n        # Copy data to temp arrays L[] and R[]\r\n        while i < len(L) and j < len(R):\r\n            if L[i] < R[j]:\r\n                arr[k] = L[i]\r\n                i += 1\r\n            else:\r\n                arr[k] = R[j]\r\n                j += 1\r\n            k += 1\r\n \r\n        # Checking if any element was left\r\n        while i < len(L):\r\n            arr[k] = L[i]\r\n            i += 1\r\n            k += 1\r\n \r\n        while j < len(R):\r\n            arr[k] = R[j]\r\n            j += 1\r\n            k += 1\r\n`;\r\n\r\nexport const PY_QUICK = `\r\n# This function takes last element as pivot, places\r\n# the pivot element at its correct position in sorted\r\n# array, and places all smaller (smaller than pivot)\r\n# to left of pivot and all greater elements to right\r\n# of pivot\r\n  \r\n  \r\ndef partition(arr, low, high):\r\n    i = (low-1)         # index of smaller element\r\n    pivot = arr[high]     # pivot\r\n  \r\n    for j in range(low, high):\r\n  \r\n        # If current element is smaller than or\r\n        # equal to pivot\r\n        if arr[j] <= pivot:\r\n  \r\n            # increment index of smaller element\r\n            i = i+1\r\n            arr[i], arr[j] = arr[j], arr[i]\r\n  \r\n    arr[i+1], arr[high] = arr[high], arr[i+1]\r\n    return (i+1)\r\n  \r\n# The main function that implements QuickSort\r\n# arr[] --> Array to be sorted,\r\n# low  --> Starting index,\r\n# high  --> Ending index\r\n  \r\n# Function to do Quick sort\r\n  \r\n  \r\ndef quickSort(arr, low, high):\r\n    if len(arr) == 1:\r\n        return arr\r\n    if low < high:\r\n  \r\n        # pi is partitioning index, arr[p] is now\r\n        # at right place\r\n        pi = partition(arr, low, high)\r\n  \r\n        # Separately sort elements before\r\n        # partition and after partition\r\n        quickSort(arr, low, pi-1)\r\n        quickSort(arr, pi+1, high)\r\n`;\r\n\r\nexport const PY_RADIX = `\r\ndef countingSort(arr, exp1):\r\n \r\n    n = len(arr)\r\n \r\n    # The output array elements that will have sorted arr\r\n    output = [0] * (n)\r\n \r\n    # initialize count array as 0\r\n    count = [0] * (10)\r\n \r\n    # Store count of occurrences in count[]\r\n    for i in range(0, n):\r\n        index = (arr[i] / exp1)\r\n        count[int(index % 10)] += 1\r\n \r\n    # Change count[i] so that count[i] now contains actual\r\n    # position of this digit in output array\r\n    for i in range(1, 10):\r\n        count[i] += count[i - 1]\r\n \r\n    # Build the output array\r\n    i = n - 1\r\n    while i >= 0:\r\n        index = (arr[i] / exp1)\r\n        output[count[int(index % 10)] - 1] = arr[i]\r\n        count[int(index % 10)] -= 1\r\n        i -= 1\r\n \r\n    # Copying the output array to arr[],\r\n    # so that arr now contains sorted numbers\r\n    i = 0\r\n    for i in range(0, len(arr)):\r\n        arr[i] = output[i]\r\n \r\n# Method to do Radix Sort\r\ndef radixSort(arr):\r\n \r\n    # Find the maximum number to know number of digits\r\n    max1 = max(arr)\r\n \r\n    # Do counting sort for every digit. Note that instead\r\n    # of passing digit number, exp is passed. exp is 10^i\r\n    # where i is current digit number\r\n    exp = 1\r\n    while max1 / exp > 0:\r\n        countingSort(arr, exp)\r\n        exp *= 10\r\n`;\r\n\r\n","import React, {useContext} from 'react';\r\nimport {PY_BUBBLE, PY_QUICK, PY_MERGE, PY_RADIX} from '../../Algorithms/Codes';\r\nimport {AlgorithmContext} from '../../context/Algorithm.context';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nexport default function CodeView() {\r\n    const {algorithm} = useContext(AlgorithmContext);\r\n\r\n    return (\r\n        <div>\r\n            <SyntaxHighlighter language=\"python\" style={docco}>\r\n                {algorithm === \"bubble\" ? PY_BUBBLE : algorithm === \"quick\" ? PY_QUICK : algorithm === \"radix\" ? PY_RADIX : algorithm === \"merge\" ? PY_MERGE : ''}\r\n            </SyntaxHighlighter>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { getBubbleSortAnimation } from \"../../Algorithms/BubbleSort\";\r\nimport { getMergeSortAnimations } from \"../../Algorithms/Test\";\r\nimport { getQuickSortAnimation } from \"../../Algorithms/QuickSort\";\r\nimport { getRadixSortAnimations } from \"../../Algorithms/RadixSort\";\r\n\r\nimport \"./Visualizer.scss\";\r\n\r\nimport Navbar from \"../Navbar/Navbar\";\r\nimport CodeView from \"../CodeView/CodeView\";\r\nimport CodeViewPy from '../CodeView/CodeViewPy';\r\nimport { AlgorithmContext } from \"../../context/Algorithm.context\";\r\n\r\nimport {\r\n  numberToWord,\r\n  placeCorrect,\r\n  colorChange,\r\n  swapAinmation,\r\n  randomIntFromInterval,\r\n  moveElementTo,\r\n  mergeColorChange,\r\n  completedColor,\r\n  ANIMATION_SPEED,\r\n  groupChangeColor,\r\n  UseInputState,\r\n} from \"./Helpers\";\r\n\r\n// export const ANIMATION_SPEED = 500;\r\n\r\nfunction Visualizer() {\r\n  const [array, setArray] = useState([]);\r\n  const [size, setSize] = useState(5);\r\n  const [speed, setSpeed] = UseInputState(500);\r\n  const [isDisabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    resetArray();\r\n  }, []);\r\n\r\n  function resetArray() {\r\n    const newArray = [];\r\n    for (let i = 0; i < size; i++) {\r\n      newArray.push(randomIntFromInterval(20, 550));\r\n    }\r\n    setArray(newArray);\r\n    completedColor(\"turquoise\");\r\n  }\r\n\r\n  const handleSizeChange = (e) => {\r\n    let value = Number(e.target.value);\r\n    setSize(() => value);\r\n    resetArray();\r\n  };\r\n\r\n  // const handleKeyDown = (e) => {\r\n  //   if(e.key === 'Enter') resetArray();\r\n  // }\r\n\r\n  const { algorithm } = useContext(AlgorithmContext);\r\n\r\n  const handleSort = () => {\r\n    // setIsDisabled(true);\r\n    if (algorithm === \"bubble\") {\r\n      bubbleSort(array, setArray);\r\n    } else if (algorithm === \"merge\") {\r\n      mergeSort(array, setArray);\r\n      // alert(\"Its yet to be implemented\")\r\n    } else if (algorithm === \"quick\") {\r\n      quickSort(array, setArray);\r\n      // alert(\"Its yet to be implemented\")\r\n    } else if (algorithm === \"radix\") {\r\n      // alert(\"Its yet to be implemented\")\r\n      radixSort(array, setArray);\r\n    } else {\r\n      alert(\"please select a choice\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"visualize\">\r\n      <Navbar\r\n        setArray={setArray}\r\n        mergeSort={mergeSort}\r\n        bubbleSort={bubbleSort}\r\n        quickSort={quickSort}\r\n        radixSort={radixSort}\r\n        array={array}\r\n        resetArray={resetArray}\r\n      />\r\n      <div className=\"input\">\r\n        <div className=\"input-size\">\r\n          <h3>Enter size </h3>\r\n          <input\r\n            type=\"range\"\r\n            min=\"5\"\r\n            max=\"25\"\r\n            value={size}\r\n            onChange={handleSizeChange}\r\n          />\r\n        </div>\r\n        <div className=\"input-size\">\r\n          <h3>Enter speed (Beta) </h3>\r\n          <input\r\n            type=\"range\"\r\n            min=\"50\"\r\n            max=\"1000\"\r\n            value={speed}\r\n            onChange={setSpeed}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"visualize__algo\">\r\n        <div onClick={() => resetArray()} className=\"visualize__algo--arr\">\r\n          Random Array\r\n        </div>\r\n        <div\r\n          onClick={handleSort}\r\n          className={\r\n            isDisabled ? \"nav__algo--sort-disabled\" : \"visualize__algo--sort\"\r\n          }\r\n        >\r\n          Sort\r\n        </div>\r\n      </div>\r\n      <div className=\"bars\">\r\n        {array.map((value, idx) => {\r\n          let cls = numberToWord(value);\r\n          return (\r\n            <div\r\n              className={`array-bars ${cls}`}\r\n              key={idx}\r\n              style={{\r\n                background: \"turquoise\",\r\n                height: `${value}px`,\r\n              }}\r\n            >\r\n              {value}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"code\">\r\n        <div>\r\n          <b>Javascipt</b>\r\n\r\n          <CodeView />\r\n        </div>\r\n        <div>\r\n          <b>Python</b>\r\n          <CodeViewPy />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n///////////////////////////////////////////////////////////////\r\n//BUBBLE SORT\r\n//////////////////////////////////////////////////////////////\r\nasync function bubbleSort(array, setArray) {\r\n  let animations = getBubbleSortAnimation(array);\r\n  // console.log(animations)\r\n\r\n  var i = 0;\r\n  function myLoop() {\r\n    setTimeout(function () {\r\n      if (animations[i].length === 1) {\r\n        if (animations[i][0] === \"sorted\") {\r\n          completedColor(\"#7deb34\");\r\n        } else {\r\n          placeCorrect(animations[i][0]);\r\n        }\r\n      } else if (animations[i][0] > animations[i][1]) {\r\n        swapAinmation(animations[i][0], animations[i][1]);\r\n      } else {\r\n        colorChange(animations[i][0], animations[i][1]);\r\n      }\r\n      i++;\r\n      if (i < animations.length) {\r\n        myLoop();\r\n      }\r\n    }, ANIMATION_SPEED);\r\n  }\r\n  myLoop();\r\n  setArray(array.sort());\r\n}\r\n\r\n///////////////////////////////////////////////////////////////\r\n//MERGE SORT\r\n//////////////////////////////////////////////////////////////\r\nasync function mergeSort(array, setArray) {\r\n  let animations = getMergeSortAnimations(array);\r\n  let i = 0;\r\n  async function myLoop() {\r\n    setTimeout(async function () {\r\n      if (i < animations.length - 1 && animations[i][0] === \"merge\") {\r\n        mergeColorChange(animations[i][1], animations[i][2]);\r\n      } else if (animations[i][0] === \"completed\") {\r\n        completedColor(\"#7deb34\");\r\n      } else if (animations[i][0] === \"compare\") {\r\n        colorChange(animations[i][1], animations[i][2]);\r\n      } else {\r\n        moveElementTo(animations[i][0], animations[i][1]);\r\n      }\r\n      i++;\r\n      if (i < animations.length) {\r\n        await myLoop();\r\n      }\r\n    }, ANIMATION_SPEED);\r\n  }\r\n  await myLoop();\r\n  setArray(array.sort());\r\n}\r\n\r\n///////////////////////////////////////////////////////////////\r\n//QUICK SORT\r\n//////////////////////////////////////////////////////////////\r\nasync function quickSort(array, setArray) {\r\n  let animations = [];\r\n  animations = getQuickSortAnimation(array);\r\n  animations.push([\"completed\"]);\r\n  let i = 0;\r\n  async function myLoop() {\r\n    setTimeout(async function () {\r\n      if (animations[i].length === 1) {\r\n        completedColor(\"#7deb34\");\r\n      } else if (animations[i][0] === \"compare\") {\r\n        colorChange(animations[i][1], animations[i][2]);\r\n      } else if (animations[i][0] === \"placed\") {\r\n        placeCorrect(animations[i][1]);\r\n      } else {\r\n        swapAinmation(animations[i][0], animations[i][1]);\r\n      }\r\n      i++;\r\n      if (i < animations.length) {\r\n        await myLoop();\r\n      }\r\n    }, ANIMATION_SPEED);\r\n  }\r\n  await myLoop();\r\n  setArray(array.sort());\r\n}\r\n\r\n///////////////////////////////////////////////////////////////\r\n//RADIX SORT\r\n//////////////////////////////////////////////////////////////\r\nfunction radixSort(array, setArray) {\r\n  const animations = getRadixSortAnimations(array);\r\n  animations.push([\"completed\"]);\r\n  // console.log(animations);\r\n  let i = 0;\r\n  function myLoop() {\r\n    setTimeout(function () {\r\n      if (animations[i].length === 1 && animations[i][0] === \"completed\") {\r\n        completedColor(\"#7deb34\");\r\n      } else if (animations[i][0] === \"digitBucket\") {\r\n        let digitBucket = animations[i][1];\r\n        for (let j = 0; j < digitBucket.length; j++) {\r\n          if (digitBucket[j].length !== 0) {\r\n            //changeColor\r\n            groupChangeColor(digitBucket[j]);\r\n            // console.log([\"group\", ...digitBucket[j]])\r\n          }\r\n        }\r\n      } else if (animations[i][0] === \"nums\") {\r\n        // console.log(animations[i][1]);\r\n        setArray(animations[i][1]);\r\n      }\r\n      i++;\r\n      if (i < animations.length) {\r\n        myLoop();\r\n      }\r\n    }, ANIMATION_SPEED + 500);\r\n  }\r\n  myLoop();\r\n}\r\n\r\nexport default Visualizer;\r\n","import Visualizer from \"./Components/Visualizer/Visualizer\";\r\nimport { AlgorithmProvider } from \"./context/Algorithm.context\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AlgorithmProvider>\r\n        <Visualizer />\r\n      </AlgorithmProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}