{"version":3,"sources":["Algorithms/BubbleSort.js","Algorithms/Test.js","Algorithms/QuickSort.js","Algorithms/RadixSort.js","context/Algorithm.context.js","Components/Navbar/Navbar.jsx","Components/Visualizer/Helpers.js","Components/Visualizer/Visualizer.jsx","App.js","index.js"],"names":["getBubbleSortAnimation","array","animations","passedArr","slice","i","length","noSwaps","j","push","temp","getMergeSortAnimations","arr","mergeSort","leftIdx","rightIdx","midIdx","Math","floor","start","mid","end","start2","value","index","merge","pivot","animation","swap","idx1","idx2","swapIdx","getQuickSortAnimation","left","right","pivotIndex","getDigit","num","abs","pow","getRadixSortAnimations","nums","maxDigitCount","maxDigits","max","log10","mostDigits","k","digitBuckets","Array","from","concat","AlgorithmContext","createContext","AlgorithmProvider","props","useState","algorithm","setAlgorithm","Provider","updateAlgorithm","newAlgorithm","children","Navbar","ANIMATION_SPEED","SPEED","setArray","resetArray","bubbleSort","quickSort","radixSort","speed","useContext","className","onClick","alert","numberToWord","parsed","toString","split","result","join","colorChange","one","two","classNameA","classNameB","childA","document","querySelector","childB","classList","add","setTimeout","remove","style","background","placeCorrect","swapAinmation","finalChildAStyle","x","y","finalChildBStyle","getBoundingClientRect","top","transform","removeAttribute","height","textContent","randomIntFromInterval","min","random","moveElementTo","idx","querySelectorAll","heightA","heightB","textA","textB","mergeColorChange","arr1","arr2","child","randomColor","completedColor","color","bars","groupChangeColor","bar","myLoop","a","sort","digitBucket","Visualizer","size","setSize","passedValue","setValue","e","Number","target","UseInputState","setSpeed","newArray","useEffect","type","onChange","onKeyDown","key","map","cls","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5bb5fc9b.chunk.js","sourcesContent":["// export function getBubbleSortAnimation(array){\r\n//     let animations = [];\r\n//     let passedArr = array.slice();\r\n//     for(let i=passedArr.length; i>0; i--){\r\n//         var noSwaps = true;\r\n//         for(let j=0; j<(i-1); j++){\r\n//             if(passedArr[j] > passedArr[j+1]) {\r\n//                 animations.push([passedArr[j],passedArr[j+1]]);\r\n//                 let temp   = passedArr[j+1];\r\n//                 passedArr[j+1] = passedArr[j];\r\n//                 passedArr[j]   = temp;\r\n//                 noSwaps = false;\r\n//             }\r\n//         }\r\n//         if(noSwaps) break;\r\n//     }\r\n//     return animations;\r\n// }\r\n\r\nexport function getBubbleSortAnimation(array){\r\n    let animations = [];\r\n    let passedArr = array.slice();\r\n    for(let i=passedArr.length; i>0; i--){\r\n        var noSwaps = true;\r\n        let j;\r\n        for(j=0; j<(i-1); j++){\r\n            animations.push([passedArr[j],passedArr[j+1]]);\r\n            if(passedArr[j] > passedArr[j+1]) {\r\n                noSwaps = false;\r\n                let temp   = passedArr[j+1];\r\n                passedArr[j+1] = passedArr[j];\r\n                passedArr[j]   = temp;\r\n            }\r\n        }\r\n        if(noSwaps){\r\n            animations.push([\"sorted\"])\r\n            break;\r\n        }\r\n        animations.push([passedArr[j]]);\r\n    }\r\n    return animations;\r\n}\r\n","let animations = [];\r\nexport function getMergeSortAnimations(arr){\r\n    animations = [];\r\n    mergeSort(arr, 0, arr.length - 1);\r\n    animations.push([\"completed\"]);\r\n    return animations;\r\n}\r\nfunction mergeSort(arr, leftIdx, rightIdx){\r\n    if(leftIdx < rightIdx){\r\n        let midIdx = Math.floor((leftIdx+rightIdx) / 2);\r\n\r\n        mergeSort(arr, leftIdx, midIdx);\r\n        mergeSort(arr, midIdx+1, rightIdx);\r\n\r\n        merge(arr, leftIdx, midIdx, rightIdx);\r\n\r\n    }\r\n}\r\n\r\nfunction merge(arr, start, mid, end){\r\n    let start2 = mid + 1;\r\n    // console.log(`Merging left : ${arr.slice(start, mid+1)} right : ${arr.slice(start2,end+1)}`);\r\n    animations.push([\"merge\", arr.slice(start, mid+1), arr.slice(start2, end+1)]);\r\n\r\n    if(arr[mid] <= arr[start2]) {\r\n        return;\r\n    }\r\n\r\n    while(start <= mid && start2 <= end){\r\n        if(arr[start] <= arr[start2] ) {\r\n            animations.push([\"compare\", arr[start], arr[start2]]);\r\n            start++;\r\n        }else {\r\n            let value = arr[start2];\r\n            let index = start2;\r\n\r\n            // Shift all the elements between element 1\r\n            // element 2, right by 1.\r\n            while (index !== start) {\r\n                // console.log(`Moving ${index-1} to ${index}`)\r\n                animations.push([index, arr[index-1]]);\r\n                arr[index] = arr[index - 1];\r\n                index--;\r\n            }\r\n            arr[start] = value;\r\n\r\n            // Update all the pointers\r\n            start++;\r\n            mid++;\r\n            start2++;\r\n        }\r\n    }\r\n}","\r\nfunction pivot(arr, start = 0, end = arr.length - 1, animation) {\r\n  const swap = (arr, idx1, idx2) => {\r\n    [arr[idx1], arr[idx2]] = [arr[idx2], arr[idx1]];\r\n  };\r\n\r\n  // We are assuming the pivot is always the first element\r\n  let pivot = arr[start];\r\n  let swapIdx = start;\r\n\r\n  for (let i = start + 1; i <= end; i++) {\r\n    animation.push([\"compare\", pivot, arr[i]]);  \r\n    if (pivot > arr[i]) {\r\n      swapIdx++;\r\n      swap(arr, swapIdx, i);\r\n      animation.push([arr[swapIdx], arr[i]]);\r\n    }\r\n  }\r\n\r\n  // Swap the pivot from the start the swapPoint\r\n  animation.push([arr[start], arr[swapIdx]]);\r\n  swap(arr, start, swapIdx);\r\n  animation.push([\"placed\", arr[swapIdx]]);\r\n  return swapIdx;\r\n}\r\n\r\n\r\nexport function getQuickSortAnimation(arr, left = 0, right = arr.length -1, animation=[]){\r\n    if(left < right){\r\n        let pivotIndex = pivot(arr, left, right, animation) //3\r\n        //left\r\n        getQuickSortAnimation(arr,left,pivotIndex-1, animation);\r\n        //right\r\n        getQuickSortAnimation(arr,pivotIndex+1,right, animation);\r\n      }\r\n     return animation;\r\n} \r\n\r\n\r\n\r\n\r\n\r\n","function getDigit(num, i) {\r\n  return Math.floor(Math.abs(num) / Math.pow(10, i)) % 10;\r\n}\r\n\r\nfunction digitCount(num) {\r\n  if (num === 0) return 1;\r\n  return Math.floor(Math.log10(Math.abs(num))) + 1;\r\n}\r\n\r\nfunction mostDigits(nums) {\r\n  let maxDigits = 0;\r\n  for (let i = 0; i < nums.length; i++) {\r\n    maxDigits = Math.max(maxDigits, digitCount(nums[i]));\r\n  }\r\n  return maxDigits;\r\n}\r\n\r\nexport function getRadixSortAnimations(nums){\r\n    let animations = [];\r\n    let maxDigitCount = mostDigits(nums);\r\n    for(let k = 0; k < maxDigitCount; k++){\r\n        let digitBuckets = Array.from({length: 10}, () => []);\r\n        for(let i = 0; i < nums.length; i++){\r\n            let digit = getDigit(nums[i],k);\r\n            digitBuckets[digit].push(nums[i]);\r\n        }\r\n        animations.push([\"digitBucket\", digitBuckets])\r\n        nums = [].concat(...digitBuckets);\r\n        animations.push([\"nums\", nums])\r\n    }\r\n    return animations;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { createContext, useState} from 'react';\r\n\r\nexport const AlgorithmContext = createContext();\r\n\r\nexport function AlgorithmProvider(props){\r\n\r\n    const [algorithm, setAlgorithm] = useState(\"bubble\");\r\n    \r\n    function updateAlgorithm(newAlgorithm){\r\n        setAlgorithm((algorithm) => {\r\n            return newAlgorithm;\r\n        })\r\n    }\r\n\r\n    return(\r\n        <AlgorithmContext.Provider value={{algorithm, updateAlgorithm}}>\r\n            {props.children}\r\n        </AlgorithmContext.Provider>\r\n    )\r\n}","import React, {useContext} from 'react';\r\nimport './Navbar.scss';\r\nimport {AlgorithmContext} from '../../context/Algorithm.context'\r\n\r\nfunction Navbar(props) {\r\n    const {setArray, \r\n            resetArray, \r\n            array, \r\n            bubbleSort, \r\n            mergeSort, \r\n            quickSort, \r\n            radixSort,\r\n            speed\r\n        } = props;\r\n\r\n    const {algorithm, updateAlgorithm} = useContext(AlgorithmContext);\r\n    const handleSort = () => {\r\n        if(algorithm === \"bubble\"){\r\n            bubbleSort(array, setArray);\r\n        }else if (algorithm === \"merge\"){\r\n            mergeSort(array, setArray, speed);\r\n            // alert(\"Its yet to be implemented\")\r\n        } else if(algorithm === \"quick\"){\r\n            quickSort(array, setArray, speed);\r\n            // alert(\"Its yet to be implemented\")\r\n        } else if (algorithm === \"radix\"){\r\n            // alert(\"Its yet to be implemented\")\r\n            radixSort(array, setArray, speed);\r\n        } else {\r\n            alert(\"please select a choice\")\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"nav\">\r\n            <div className=\"nav__brand\">\r\n                <p>ALGOHUB</p>\r\n            </div>\r\n            <div className=\"nav__algo\">\r\n                <div \r\n                    onClick={() => updateAlgorithm(\"bubble\")}\r\n                    className={algorithm === \"bubble\" ? 'active' : null}\r\n                >\r\n                    Bubble Sort\r\n                </div>\r\n                <div \r\n                    onClick={() => updateAlgorithm(\"merge\")}\r\n                    className={algorithm === \"merge\" ? 'active' : null}\r\n                >\r\n                    Merge Sort\r\n                </div>\r\n                <div \r\n                    onClick={() => updateAlgorithm(\"quick\")}\r\n                    className={algorithm === \"quick\" ? 'active' : null}\r\n                >\r\n                    Quick Sort\r\n                </div>\r\n                <div \r\n                    onClick={() => updateAlgorithm(\"radix\")}\r\n                    className={algorithm === \"radix\" ? 'active' : null}\r\n                >\r\n                    Radix Sort\r\n                </div>\r\n                <div\r\n                    onClick={() => resetArray()}  \r\n                    className=\"nav__algo--arr\"\r\n                >\r\n                    Random Array\r\n                </div>\r\n                <div \r\n                    onClick={handleSort} \r\n                    className=\"nav__algo--sort\"\r\n                >\r\n                    Sort\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import {getQuickSortAnimation} from '../../Algorithms/QuickSort';\r\n\r\nimport { useState } from 'react';\r\n\r\nexport let ANIMATION_SPEED;\r\n\r\nlet SPEED;\r\n\r\nexport const UseInputState = (passedValue) => {\r\n    const [value, setValue] = useState(passedValue);\r\n    const handleChange = e => {\r\n      let value = Number(e.target.value);\r\n        setValue(value);\r\n        ANIMATION_SPEED = value;\r\n        SPEED = ANIMATION_SPEED-200;\r\n    };\r\n    return [value, handleChange];\r\n};\r\n\r\n\r\n\r\nexport function numberToWord(num){\r\n    let parsed = num.toString().split('');\r\n    let result = [];\r\n    for(let i=0; i<parsed.length; i++){\r\n        if(parsed[i] === \"0\") result.push(\"zero\")\r\n        else if(parsed[i] === \"1\") result.push(\"one\")\r\n        else if(parsed[i] === \"2\") result.push(\"two\")\r\n        else if(parsed[i] === \"3\") result.push(\"three\")\r\n        else if(parsed[i] === \"4\") result.push(\"four\")\r\n        else if(parsed[i] === \"5\") result.push(\"five\")\r\n        else if(parsed[i] === \"6\") result.push(\"six\")\r\n        else if(parsed[i] === \"7\") result.push(\"seven\")\r\n        else if(parsed[i] === \"8\") result.push(\"eight\")\r\n        else if(parsed[i] === \"9\") result.push(\"nine\")\r\n    }\r\n    return result.join('');\r\n}\r\n\r\nexport function colorChange(one, two){\r\n  let classNameA = numberToWord(one);\r\n  let classNameB = numberToWord(two);\r\n  const childA = document.querySelector(`.${classNameA}`);\r\n  const childB = document.querySelector(`.${classNameB}`);\r\n\r\n  childA.classList.add('compare');\r\n  childB.classList.add('compare');\r\n\r\n  setTimeout(() => {\r\n    childA.classList.remove('compare');\r\n    childB.classList.remove('compare');\r\n    childA.style.background = 'turquoise';\r\n    childB.style.background = 'turquoise';\r\n  }, SPEED);\r\n}\r\n\r\nexport function colorChangeSingle(one){\r\n  let classNameA = numberToWord(one);\r\n  const childA = document.querySelector(`.${classNameA}`);\r\n\r\n  childA.classList.add('compare');\r\n\r\n  setTimeout(() => {\r\n    childA.classList.remove('compare');\r\n  }, SPEED);\r\n}\r\n\r\nexport function placeCorrect(one){\r\n  let className = numberToWord(one);\r\n  const child = document.querySelector(`.${className}`);\r\n\r\n  child.classList.add(\"placed\");\r\n}\r\n\r\nexport function swapAinmation(one, two){\r\n    let classNameA = numberToWord(one);\r\n    let classNameB = numberToWord(two);\r\n    const childA = document.querySelector(`.${classNameA}`);\r\n    const childB = document.querySelector(`.${classNameB}`);\r\n    const finalChildAStyle = {\r\n        x: null,\r\n        y: null,\r\n    };\r\n    const finalChildBStyle = {\r\n        x: null,\r\n        y: null,\r\n    };\r\n    \r\n    childA.classList.add('transition');\r\n    childB.classList.add('transition');\r\n    finalChildAStyle.x = childB.getBoundingClientRect().left - childA.getBoundingClientRect().left;\r\n    finalChildAStyle.y = childA.getBoundingClientRect().top - childB.getBoundingClientRect().top;\r\n    finalChildBStyle.x = childA.getBoundingClientRect().left - childB.getBoundingClientRect().left;\r\n    finalChildBStyle.y = childB.getBoundingClientRect().top - childA.getBoundingClientRect().top;\r\n    childA.style.transform = `translate(${finalChildAStyle.x}px, ${finalChildAStyle.y}px)`;\r\n    childB.style.transform = `translate(${finalChildBStyle.x}px, ${finalChildBStyle.y}px)`;\r\n\r\n    setTimeout(() => {\r\n    //   document.querySelector('.container').insertBefore(childB, childA);\r\n      childA.classList.remove('transition');\r\n      childB.classList.remove('transition');\r\n\r\n      childA.classList.remove(classNameA);\r\n      childB.classList.remove(classNameB);\r\n\r\n      childA.removeAttribute('style');\r\n      childB.removeAttribute('style');\r\n      \r\n      childA.style.height = `${two}px`;\r\n      childB.style.height = `${one}px`;\r\n\r\n      childA.classList.add(classNameB);\r\n      childB.classList.add(classNameA)\r\n\r\n      childA.style.background = 'turquoise';\r\n      childB.style.background = 'turquoise';\r\n\r\n      childA.textContent = two;\r\n      childB.textContent = one;\r\n    }, SPEED);\r\n}\r\n\r\nexport function testSortingAlgorithms() {\r\n    for (let i = 0; i < 100; i++) {\r\n      const array = [];\r\n      const length = randomIntFromInterval(1, 1000);\r\n      for (let i = 0; i < length; i++) {\r\n        array.push(randomIntFromInterval(-1000, 1000));\r\n      }\r\n      const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\r\n      const quickSortedArray = getQuickSortAnimation(array.slice());\r\n      console.log(arraysAreEqual(javaScriptSortedArray, quickSortedArray));\r\n    }\r\n}\r\n\r\nexport function arraysAreEqual(arrayOne, arrayTwo) {\r\n  if (arrayOne.length !== arrayTwo.length) return false;\r\n  for (let i = 0; i < arrayOne.length; i++) {\r\n    if (arrayOne[i] !== arrayTwo[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\r\nexport function randomIntFromInterval(min, max) {\r\n  // min and max included\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nexport function moveElementTo(idx, value){\r\n  let classNameB = numberToWord(value);\r\n  const childA = document.querySelectorAll(\".array-bars\")[idx];\r\n  const childB = document.querySelector(`.${classNameB}`);\r\n  let heightA = childA.style.height;\r\n  let heightB = childB.style.height;\r\n  let classNameA = childA.classList.value.split(' ')[1];\r\n  let textA = childA.textContent;\r\n  let textB = childB.textContent;\r\n\r\n\r\n  const finalChildAStyle = {\r\n      x: null,\r\n      y: null,\r\n  };\r\n  const finalChildBStyle = {\r\n      x: null,\r\n      y: null,\r\n  };\r\n    childA.classList.add('transition');\r\n    childB.classList.add('transition');\r\n  finalChildAStyle.x = childB.getBoundingClientRect().left - childA.getBoundingClientRect().left;\r\n  finalChildAStyle.y = childA.getBoundingClientRect().top - childB.getBoundingClientRect().top;\r\n  finalChildBStyle.x = childA.getBoundingClientRect().left - childB.getBoundingClientRect().left;\r\n  finalChildBStyle.y = childB.getBoundingClientRect().top - childA.getBoundingClientRect().top;\r\n  childA.style.transform = `translate(${finalChildAStyle.x}px, ${finalChildAStyle.y}px)`;\r\n  childB.style.transform = `translate(${finalChildBStyle.x}px, ${finalChildBStyle.y}px)`;\r\n\r\n  setTimeout(() => {\r\n  //   document.querySelector('.container').insertBefore(childB, childA);\r\n    childA.classList.remove('transition');\r\n    childB.classList.remove('transition');\r\n\r\n    childA.classList.remove(classNameA);\r\n    childB.classList.remove(classNameB);\r\n\r\n    childA.removeAttribute('style');\r\n    childB.removeAttribute('style');\r\n    \r\n    childA.style.height = heightB;\r\n    childB.style.height = heightA;\r\n\r\n    childA.classList.add(classNameB);\r\n    childB.classList.add(classNameA)\r\n\r\n    childA.style.background = 'turquoise';\r\n    childB.style.background = 'turquoise';\r\n\r\n    childA.textContent = textB;\r\n    childB.textContent = textA;\r\n  }, SPEED);\r\n}\r\n\r\nexport function mergeColorChange(arr1, arr2){\r\n  for(let i=0; i < arr1.length; i++){\r\n    let className = numberToWord(arr1[i]);\r\n    let child = document.querySelector(`.${className}`);\r\n    child.style.background = '#da00f7';\r\n    setTimeout(function() {\r\n      child.style.background = 'turquoise';\r\n    }, SPEED)\r\n  }\r\n  for(let i=0; i < arr2.length; i++){\r\n    let className = numberToWord(arr2[i]);\r\n    let child = document.querySelector(`.${className}`);\r\n    child.style.background = \"#750485\";\r\n    setTimeout(function() {\r\n      child.style.background = 'turquoise';\r\n    }, SPEED)\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction generateRandomColors(num){\r\n\r\n  var a = [];\r\n\r\n  for(var i=0; i<num; i++){\r\n      a.push(randomColor());\r\n  }\r\n\r\n  return a;\r\n\r\n}\r\n\r\nfunction randomColor(){\r\n\r\n  let r = Math.floor(Math.random() * 256);\r\n\r\n  let g = Math.floor(Math.random() * 256);\r\n\r\n  let b = Math.floor(Math.random() * 256);\r\n\r\n  return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n\r\n}\r\n\r\nexport function changeBarColor(){\r\n  let bars = document.querySelectorAll(\".array-bars\");\r\n  let colors = generateRandomColors(bars.length);\r\n  for(let i=0; i<bars.length; i++){\r\n    bars[i].style.background = colors[i];\r\n  }\r\n}\r\n\r\nexport function completedColor(color){\r\n  let bars = document.querySelectorAll(\".array-bars\");\r\n  for(let i=0; i<bars.length; i++){\r\n    bars[i].style.background = color;\r\n  }\r\n}\r\n\r\nexport function groupChangeColor(arr){\r\n  let bars = [];\r\n  let color = randomColor();\r\n  for(let i=0; i<arr.length; i++){\r\n    let className = numberToWord(arr[i]);\r\n    let bar = document.querySelector(`.${className}`);\r\n    bars.push(bar);\r\n  }\r\n  // console.log(bars);\r\n  for(let i=0; i<bars.length; i++){\r\n    bars[i].style.background = color;\r\n  } \r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {getBubbleSortAnimation} from '../../Algorithms/BubbleSort';\r\nimport {getMergeSortAnimations} from '../../Algorithms/Test';\r\nimport {getQuickSortAnimation} from '../../Algorithms/QuickSort';\r\nimport {getRadixSortAnimations} from '../../Algorithms/RadixSort';\r\n\r\n\r\nimport './Visualizer.scss';\r\n\r\nimport Navbar from '../Navbar/Navbar';\r\nimport CodeView from '../CodeView/CodeView';\r\nimport {AlgorithmProvider} from '../../context/Algorithm.context';\r\n\r\nimport {numberToWord,\r\n        placeCorrect, \r\n        colorChange, \r\n        swapAinmation, \r\n        randomIntFromInterval, \r\n        moveElementTo,\r\n        mergeColorChange,\r\n        completedColor,\r\n        ANIMATION_SPEED,\r\n        groupChangeColor,\r\n        UseInputState}\r\n        from './Helpers';\r\n\r\n\r\n\r\n// export const ANIMATION_SPEED = 500;\r\n\r\nfunction Visualizer() {\r\n    const [array, setArray] = useState([]);\r\n    const [size, setSize] = useState(10);\r\n    const [speed, setSpeed] = UseInputState(500);\r\n\r\n    useEffect(() => {\r\n        resetArray();\r\n    }, [])\r\n\r\n    function resetArray() {\r\n        const newArray = [];\r\n        for (let i = 0; i < size; i++) {\r\n            newArray.push(randomIntFromInterval(20, 550));\r\n        }\r\n        setArray(newArray);\r\n        completedColor(\"turquoise\")\r\n    }\r\n\r\n    const handleSizeChange = (e) => {\r\n      let value = Number(e.target.value);\r\n      setSize(() => value);\r\n    }\r\n\r\n    const handleKeyDown = (e) => {\r\n      if(e.key === 'Enter') resetArray();\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"visualize\">\r\n          <AlgorithmProvider>\r\n            <Navbar \r\n              setArray={setArray} \r\n              mergeSort={mergeSort} \r\n              bubbleSort={bubbleSort}\r\n              quickSort={quickSort}\r\n              radixSort={radixSort} \r\n              array={array} \r\n              resetArray={resetArray}\r\n              />\r\n            <div className=\"input-size\">\r\n              <h3>Enter size (Press enter)</h3>\r\n              <input \r\n                type=\"number\"\r\n                value={size}\r\n                onChange={handleSizeChange}\r\n                onKeyDown={handleKeyDown}\r\n              />\r\n            </div>\r\n            <div className=\"input-size\">\r\n              <h3>Enter speed (Beta) - this might break the application)</h3>\r\n              <input \r\n                type=\"number\"\r\n                value={speed}\r\n                onChange={setSpeed}\r\n              />\r\n            </div>  \r\n            <div className=\"bars\">\r\n                {array.map((value, idx) => {\r\n                    let cls = numberToWord(value);\r\n                    return (<div\r\n                      className={`array-bars ${cls}`}\r\n                      key={idx}\r\n                      style={{\r\n                          background: \"turquoise\",\r\n                          height: `${value}px`\r\n                      }}\r\n                    >{value}</div>)\r\n                })}\r\n            </div>\r\n            {/* <div className=\"code\">\r\n              <CodeView/>\r\n            </div> */}\r\n            </AlgorithmProvider>\r\n        </div>\r\n    )\r\n}\r\n\r\n///////////////////////////////////////////////////////////////\r\n//BUBBLE SORT\r\n//////////////////////////////////////////////////////////////\r\nasync function bubbleSort(array, setArray){\r\n  let animations = getBubbleSortAnimation(array);\r\n  // console.log(animations)\r\n\r\n  var i=0;\r\n  function myLoop() {                                     \r\n    setTimeout(function() {\r\n      if(animations[i].length === 1){\r\n        if(animations[i][0] === \"sorted\"){\r\n          completedColor('blue');\r\n        }else{\r\n          placeCorrect(animations[i][0]);\r\n        }\r\n      }\r\n      else if(animations[i][0] > animations[i][1]){\r\n        swapAinmation(animations[i][0], animations[i][1]);\r\n      }else{\r\n        colorChange(animations[i][0], animations[i][1]);\r\n      }                               \r\n      i++;                                                  \r\n      if (i < animations.length) {                          \r\n        myLoop();                                           \r\n      }                                                     \r\n    }, ANIMATION_SPEED)\r\n  }\r\n  myLoop();\r\n  setArray(array.sort());\r\n   \r\n}\r\n\r\n///////////////////////////////////////////////////////////////\r\n//MERGE SORT\r\n//////////////////////////////////////////////////////////////\r\nasync function mergeSort(array, setArray){\r\n  let animations = getMergeSortAnimations(array);\r\n  let i = 0;\r\n  async function myLoop() {\r\n    setTimeout(async function() {\r\n      if(i < (animations.length-1) && animations[i][0] === \"merge\"){\r\n        mergeColorChange(animations[i][1], animations[i][2]);\r\n      }\r\n      else if(animations[i][0] === \"completed\"){\r\n        completedColor('green');\r\n      }else if(animations[i][0] === \"compare\"){\r\n        colorChange(animations[i][1], animations[i][2]);\r\n      }\r\n      else{\r\n        moveElementTo(animations[i][0], animations[i][1]);\r\n      }\r\n      i++;\r\n      if(i < animations.length){\r\n        await myLoop();\r\n      }\r\n    }, ANIMATION_SPEED)\r\n  }\r\n  await myLoop();\r\n  setArray(array.sort());\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////\r\n//QUICK SORT\r\n//////////////////////////////////////////////////////////////\r\nasync function quickSort(array, setArray){\r\n  let animations = getQuickSortAnimation(array);\r\n  animations.push([\"completed\"]);\r\n  let i = 0;\r\n  async function myLoop() {\r\n    setTimeout(async function() {\r\n      if(animations[i].length === 1){\r\n        completedColor('blue')\r\n      }else if(animations[i][0] === \"compare\"){\r\n        colorChange(animations[i][1], animations[i][2]);\r\n      }else if(animations[i][0] === \"placed\"){\r\n        placeCorrect(animations[i][1]);\r\n      }else {\r\n        swapAinmation(animations[i][0], animations[i][1]);\r\n      }\r\n      i++;\r\n      if(i < animations.length){\r\n        await myLoop();\r\n      }\r\n    }, ANIMATION_SPEED)\r\n  }\r\n  await myLoop();\r\n  setArray(array.sort());\r\n}\r\n\r\n\r\n///////////////////////////////////////////////////////////////\r\n//RADIX SORT\r\n//////////////////////////////////////////////////////////////\r\nfunction radixSort(array, setArray){\r\n  const animations = getRadixSortAnimations(array);\r\n  animations.push([\"completed\"])\r\n  // console.log(animations);\r\n  let i = 0;\r\n  function myLoop(){\r\n    setTimeout(function (){\r\n      if(animations[i].length === 1 && animations[i][0] === 'completed'){\r\n        completedColor('blue');\r\n      }\r\n      else if(animations[i][0] === 'digitBucket'){\r\n        let digitBucket = animations[i][1];\r\n        for(let j=0; j<digitBucket.length; j++){\r\n          if(digitBucket[j].length !== 0){\r\n            //changeColor\r\n            groupChangeColor(digitBucket[j]);\r\n            // console.log([\"group\", ...digitBucket[j]])\r\n          }\r\n        }\r\n      }else if(animations[i][0] === 'nums'){\r\n        // console.log(animations[i][1]);\r\n        setArray(animations[i][1])\r\n      }      \r\n      i++;\r\n      if(i < animations.length){\r\n        myLoop()\r\n      }\r\n    }, ANIMATION_SPEED+500)\r\n  }\r\n  myLoop();\r\n}\r\n\r\n\r\n\r\nexport default Visualizer\r\n","import Visualizer from './Components/Visualizer/Visualizer';\r\nimport {AlgorithmProvider} from './context/Algorithm.context';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <AlgorithmProvider> */}\r\n        <Visualizer/>\r\n      {/* </AlgorithmProvider> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}